{"version":3,"sources":["tags.js"],"names":["tagsInput","document","querySelector","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","forEach","tag","etiqueta","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","e","target","remove","filter","value","toString","split","addEventListener","keyCode","preventDefault","trim","length","needle","iguales","toLowerCase","repeatedTag"],"mappings":"CAAA,WACA,MAAAA,EAAAC,SAAAC,cAAA,eAEA,GAAAF,EAAA,CAEA,MAAAG,EAAAF,SAAAC,cAAA,SACAE,EAAAH,SAAAC,cAAA,iBAGA,IAAAG,EAAA,GAkCA,SAAAC,IACAH,EAAAI,YAAA,GAEAF,EAAAG,QAAAC,IACA,MAAAC,EAAAT,SAAAU,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAH,YAAAE,EACAC,EAAAI,WAAAC,EACAZ,EAAAa,YAAAN,KAGAO,IAGA,SAAAF,EAAAG,GACAA,EAAAC,OAAAC,SAGAf,EAAAA,EAAAgB,OAAAZ,GAAAA,IAAAS,EAAAC,OAAAZ,aAEAU,IAIA,SAAAA,IACAb,EAAAkB,MAAAjB,EAAAkB,WAxDA,KAAAnB,EAAAkB,QACAjB,EAAAD,EAAAkB,MAAAE,MAAA,KACAlB,KAKAN,EAAAyB,iBAAA,YAEA,SAAAP,GAEA,GAAA,KAAAA,EAAAQ,QAAA,CAMA,GAHAR,EAAAS,iBAGA,KAAAT,EAAAC,OAAAG,MAAAM,QAAAV,EAAAC,OAAAG,MAAAO,OAAA,GA0CA,SAAAC,GACA,IAAAC,GAAA,EASA,OARA1B,EAAAG,QAAAC,IAGAA,EAAAuB,cAAAJ,SAAAE,EAAAE,cAAAJ,SACAG,GAAA,KAIAA,EApDAE,CAAAf,EAAAC,OAAAG,OAGA,YADAJ,EAAAC,OAAAG,MAAA,IAKAjB,EAAA,IAAAA,EAAAa,EAAAC,OAAAG,MAAAM,QACA5B,EAAAsB,MAAA,GAEAhB,SAvCA","file":"bundle.js","sourcesContent":["(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        // Array que contendrá los tags y se actualizará según las acciones del usuario\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            // Si el keyCode es el de \",\"\r\n            if(e.keyCode === 44){\r\n\r\n                // Previene que aparezca la \",\" al ingresar un nuevo tag\r\n                e.preventDefault();\r\n                \r\n                // Evita que se ingrese un valor vacio o repetido al Array de tags\r\n                if(e.target.value.trim() === '' || e.target.value.length < 1 || repeatedTag(e.target.value)){\r\n\r\n                    e.target.value = '';\r\n                    return\r\n                }\r\n\r\n                // Actualiza el Array con lo nuevo\r\n                tags = [...tags, e.target.value.trim()]       \r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n\r\n            // Actualizar el array tags con lo que se acabó de remover\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        // El input hidden contiene lo que se enviará a la DB\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function repeatedTag(needle){\r\n            let iguales = false;\r\n            tags.forEach(tag => {\r\n\r\n                // Transformamos ambos a lower case y comparamos si son iguales a los que estan en el arreglo de tags\r\n                if(tag.toLowerCase().trim() === needle.toLowerCase().trim()){\r\n                    iguales = true;\r\n                }\r\n\r\n            });\r\n            return iguales;\r\n        }\r\n    }\r\n})()"]}